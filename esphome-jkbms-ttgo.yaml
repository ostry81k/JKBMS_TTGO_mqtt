substitutions:
  devicename: JKBMS_Tdisplay
 
esphome:
  name: esphome-web-1db9d8
  friendly_name: JKBMS T-Display

esp32:
  board: esp32dev
  framework:
    type: arduino

external_components:
  - source: github://syssi/esphome-jk-bms@main
    refresh: 0s


# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "YGKgT0+eAj5uKaspJzP4ASxHpeqzHuQKlAeoWXyMEP0="

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-1Db9D8"
    password: "3jGM4jExH5m9"

captive_portal:

mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client    

# JK-BMS comms configuration ------------------------------------------#

uart:
  - id: uart_0
    baud_rate: 115200
    rx_buffer_size: 384
    tx_pin: GPIO12
    rx_pin: GPIO13

jk_modbus:
  - id: modbus0
    uart_id: uart_0
    rx_timeout: 50ms

jk_bms:
  - id: bms0
    jk_modbus_id: modbus0
    update_interval: 5s

binary_sensor:
  - platform: status
    name: "JKBMS T-Display Network Status"
    id: system_status

  - platform: gpio
    pin:
      number: GPIO0
      inverted: true
    id: tdisplay_button_input_0
    name: ${devicename} BOTTOM_PB
    on_click:
    - min_length: 50ms
      max_length: 400ms
      then:
        - display.page.show: page2
        - component.update: st7789vdisplay
       
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    id: tdisplay_button_input_1
    name: ${devicename} TOP_PB
    on_click:
    - min_length: 50ms
      max_length: 400ms
      then:
        - display.page.show: page1
        - component.update: st7789vdisplay
        

  - platform: jk_bms
    balancing:
      name: "${devicename} balancing"
    balancing_switch:
      name: "${devicename} balancing switch"
    charging:
      name: "${devicename} charging"
    charging_switch:
      name: "${devicename} charging switch"
    discharging:
      name: "${devicename} discharging"
    discharging_switch:
      name: "${devicename} discharging switch"
    dedicated_charger_switch:
      name: "${devicename} dedicated charger switch"
    online_status:
      name: "${devicename} online status"

sensor:
  - platform: jk_bms
    min_cell_voltage:
      name: "${devicename} min cell voltage"
    max_cell_voltage:
      name: "${devicename} max cell voltage"
    min_voltage_cell:
      name: "${devicename} min voltage cell"
    max_voltage_cell:
      name: "${devicename} max voltage cell"
    delta_cell_voltage:
      name: "${devicename} delta cell voltage"
      id: delta_cell_voltage
    average_cell_voltage:
      name: "${devicename} average cell voltage"
    cell_voltage_1:
      name: "${devicename} cell voltage 1"
    cell_voltage_2:
      name: "${devicename} cell voltage 2"
    cell_voltage_3:
      name: "${devicename} cell voltage 3"
    cell_voltage_4:
      name: "${devicename} cell voltage 4"
    cell_voltage_5:
      name: "${devicename} cell voltage 5"
    cell_voltage_6:
      name: "${devicename} cell voltage 6"
    cell_voltage_7:
      name: "${devicename} cell voltage 7"
    cell_voltage_8:
      name: "${devicename} cell voltage 8"
    cell_voltage_9:
      name: "${devicename} cell voltage 9"
    cell_voltage_10:
      name: "${devicename} cell voltage 10"
    cell_voltage_11:
      name: "${devicename} cell voltage 11"
    cell_voltage_12:
      name: "${devicename} cell voltage 12"
    cell_voltage_13:
      name: "${devicename} cell voltage 13"
    cell_voltage_14:
      name: "${devicename} cell voltage 14"
    cell_voltage_15:
      name: "${devicename} cell voltage 15"
    cell_voltage_16:
      name: "${devicename} cell voltage 16"
    cell_voltage_17:
      name: "${devicename} cell voltage 17"
    cell_voltage_18:
      name: "${devicename} cell voltage 18"
    cell_voltage_19:
      name: "${devicename} cell voltage 19"
    cell_voltage_20:
      name: "${devicename} cell voltage 20"
    cell_voltage_21:
      name: "${devicename} cell voltage 21"
    cell_voltage_22:
      name: "${devicename} cell voltage 22"
    cell_voltage_23:
      name: "${devicename} cell voltage 23"
    cell_voltage_24:
      name: "${devicename} cell voltage 24"
    power_tube_temperature:
      name: "${devicename} power tube temperature"
    temperature_sensor_1:
      name: "${devicename} temperature sensor 1"
    temperature_sensor_2:
      name: "${devicename} temperature sensor 2"
    total_voltage:
      name: "${devicename} total voltage"
      id: total_voltage
    current:
      name: "${devicename} current"
      id: current
    power:
      name: "${devicename} power"
    charging_power:
      name: "${devicename} charging power"
    discharging_power:
      name: "${devicename} discharging power"
    capacity_remaining:
      name: "${devicename} capacity remaining"
      id: capacity_remaining
    capacity_remaining_derived:
      name: "${devicename} capacity remaining derived"
    temperature_sensors:
      name: "${devicename} temperature sensors"
    charging_cycles:
      name: "${devicename} charging cycles"
    total_charging_cycle_capacity:
      name: "${devicename} total charging cycle capacity"
    battery_strings:
      name: "${devicename} battery strings"
    errors_bitmask:
      name: "${devicename} errors bitmask"
    operation_mode_bitmask:
      name: "${devicename} operation mode bitmask"
    total_voltage_overvoltage_protection:
      name: "${devicename} total voltage overvoltage protection"
    total_voltage_undervoltage_protection:
      name: "${devicename} total voltage undervoltage protection"
    cell_voltage_overvoltage_protection:
      name: "${devicename} cell voltage overvoltage protection"
    cell_voltage_overvoltage_recovery:
      name: "${devicename} cell voltage overvoltage recovery"
    cell_voltage_overvoltage_delay:
      name: "${devicename} cell voltage overvoltage delay"
    cell_voltage_undervoltage_protection:
      name: "${devicename} cell voltage undervoltage protection"
    cell_voltage_undervoltage_recovery:
      name: "${devicename} cell voltage undervoltage recovery"
    cell_voltage_undervoltage_delay:
      name: "${devicename} cell voltage undervoltage delay"
    cell_pressure_difference_protection:
      name: "${devicename} cell pressure difference protection"
    discharging_overcurrent_protection:
      name: "${devicename} discharging overcurrent protection"
    discharging_overcurrent_delay:
      name: "${devicename} discharging overcurrent delay"
    charging_overcurrent_protection:
      name: "${devicename} charging overcurrent protection"
    charging_overcurrent_delay:
      name: "${devicename} charging overcurrent delay"
    balance_starting_voltage:
      name: "${devicename} balance starting voltage"
    balance_opening_pressure_difference:
      name: "${devicename} balance opening pressure difference"
    power_tube_temperature_protection:
      name: "${devicename} power tube temperature protection"
    power_tube_temperature_recovery:
      name: "${devicename} power tube temperature recovery"
    temperature_sensor_temperature_protection:
      name: "${devicename} temperature sensor temperature protection"
    temperature_sensor_temperature_recovery:
      name: "${devicename} temperature sensor temperature recovery"
    temperature_sensor_temperature_difference_protection:
      name: "${devicename} temperature sensor temperature difference protection"
    charging_high_temperature_protection:
      name: "${devicename} charging high temperature protection"
    discharging_high_temperature_protection:
      name: "${devicename} discharging high temperature protection"
    charging_low_temperature_protection:
      name: "${devicename} charging low temperature protection"
    charging_low_temperature_recovery:
      name: "${devicename} charging low temperature recovery"
    discharging_low_temperature_protection:
      name: "${devicename} discharging low temperature protection"
    discharging_low_temperature_recovery:
      name: "${devicename} discharging low temperature recovery"
    total_battery_capacity_setting:
      name: "${devicename} total battery capacity setting"
    current_calibration:
      name: "${devicename} current calibration"
    device_address:
      name: "${devicename} device address"
    sleep_wait_time:
      name: "${devicename} sleep wait time"
    alarm_low_volume:
      name: "${devicename} alarm low volume"
    manufacturing_date:
      name: "${devicename} manufacturing date"
    total_runtime:
      name: "${devicename} total runtime"
#    start_current_calibration:
#      name: "${devicename} start current calibration"
    actual_battery_capacity:
      name: "${devicename} actual battery capacity"
#    protocol_version:
#      name: "${devicename} protocol version"

text_sensor:
  - platform: jk_bms
    errors:
      name: "${devicename} errors"
    operation_mode:
      name: "${devicename} operation mode"
    battery_type:
      name: "${devicename} battery type"
    password:
      name: "${devicename} password"
    device_type:
      name: "${devicename} device type"
    software_version:
      name: "${devicename} software version"
    manufacturer:
      name: "${devicename} manufacturer"
    total_runtime_formatted:
      name: "${devicename} total runtime formatted"

# TTGO T-Display configuration ------------------------------------------#

color:
  - id: my_red
    red: 100%
    green: 0%
    blue: 0%
  - id: my_yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: my_green
    red_int: 60
    green_int: 235
    blue_int: 80
  - id: my_blue
    red: 0%
    green: 0%
    blue: 100%
  - id: my_white
    red: 90%
    green: 90%
    blue: 90%
  - id: my_gray
    red_int: 10
    green_int: 10
    blue_int: 10
  - id: my_bckgnd
    red_int: 30
    green_int: 30
    blue_int: 30

font:
  - file: "fonts/Helvetica.ttf"
    id: helvetica_40
    size: 40
  - file: "fonts/Helvetica.ttf"
    id: helvetica_20
    size: 20
  - file: "fonts/Helvetica.ttf"
    id: helvetica_14
    size: 14
# put a ttf font called Helvetica.ttf in the esphome subfolder folder "fonts"

switch:
  - platform: restart
    name: ${devicename} RESTART

time:
  - platform: homeassistant
    id: esptime

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19

display:
  - platform: st7789v
    id: st7789vdisplay
    model: TTGO TDisplay 135x240
    backlight_pin: GPIO4
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    update_interval: 2s
    rotation: 90
    pages:
      - id: page1
        lambda: |-
          // header bar ------------------------------------------------------------
          
          it.filled_rectangle(0,  0, it.get_width(), it.get_height(), id(my_bckgnd));
          it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_gray));
          it.rectangle(0,  22, it.get_width(), 2, id(my_gray));
                      
          it.print(5, 6, id(helvetica_14), id(my_yellow), TextAlign::TOP_LEFT, "WiFi:");

          if (id(system_status).state) {
            it.print(45, 6, id(helvetica_14), id(my_green), TextAlign::TOP_LEFT, "Online");
          }
          else {
            it.print(45, 6, id(helvetica_14), id(my_red), TextAlign::TOP_LEFT, "Offline");
          }
          
          it.print(150, 6, id(helvetica_14), id(my_yellow), TextAlign::TOP_LEFT, "BMS:");

          if (isnan(id(delta_cell_voltage).state)) {
            it.print(190, 6, id(helvetica_14), id(my_red), TextAlign::TOP_LEFT, "Offline");
          }
          else {
            it.print(190, 6, id(helvetica_14), id(my_green), TextAlign::TOP_LEFT, "Online");
          }

          // numeric values ------------------------------------------------------------

          it.print(110, 30, id(helvetica_20), id(my_green), TextAlign::RIGHT, "V");
          it.print(230, 30, id(helvetica_20), id(my_green), TextAlign::RIGHT, "A");
          
          it.print(10, 85, id(helvetica_14), id(my_white), TextAlign::LEFT, "DELTA CELL VOLT: ");
          it.print(10, 110, id(helvetica_14), id(my_white), TextAlign::LEFT, "REMAIN BATTERY: ");

          if (isnan(id(delta_cell_voltage).state)) {
            it.print(93, 35, id(helvetica_40), id(my_green), TextAlign::RIGHT, "--.-");
            it.print(213, 35, id(helvetica_40), id(my_green), TextAlign::RIGHT, "--.-");
            it.printf(150, 80, id(helvetica_20), id(my_green), TextAlign::LEFT, "-.---V");
            it.printf(150, 105, id(helvetica_20), id(my_green), TextAlign::LEFT, "--.--%");
          }
          else {
            it.printf(93, 35, id(helvetica_40), id(my_green), TextAlign::RIGHT, "%4.1f", id(total_voltage).state);
            it.printf(213, 35, id(helvetica_40), id(my_green), TextAlign::RIGHT, "%4.1f", id(current).state);
            it.printf(150, 80, id(helvetica_20), id(my_green), TextAlign::LEFT, "%.3fV", id(delta_cell_voltage).state);
            it.printf(150, 105, id(helvetica_20), id(my_green), TextAlign::LEFT, "%.2f%%", id(capacity_remaining).state);
          }

      - id: page2
        lambda: |-
          // header bar ------------------------------------------------------------
          
          it.filled_rectangle(0,  0, it.get_width(), it.get_height(), id(my_bckgnd));
          it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_gray));
          it.rectangle(0,  22, it.get_width(), 2, id(my_gray));
                      
          it.print(5, 6, id(helvetica_14), id(my_yellow), TextAlign::TOP_LEFT, "WiFi:");

          if (id(system_status).state) {
            it.print(45, 6, id(helvetica_14), id(my_green), TextAlign::TOP_LEFT, "Online");
          }
          else {
            it.print(45, 6, id(helvetica_14), id(my_red), TextAlign::TOP_LEFT, "Offline");
          }
          
          it.print(150, 6, id(helvetica_14), id(my_yellow), TextAlign::TOP_LEFT, "BMS:");

          if (isnan(id(delta_cell_voltage).state)) {
            it.print(190, 6, id(helvetica_14), id(my_red), TextAlign::TOP_LEFT, "Offline");
          }
          else {
            it.print(190, 6, id(helvetica_14), id(my_green), TextAlign::TOP_LEFT, "Online");
          }

          // numeric values ------------------------------------------------------------
          it.print(120, 50, id(helvetica_40), id(my_green), TextAlign::CENTER, "PAGE 2");

# it.printf(50, 30, id(helvetica_48), id(my_yellow), TextAlign::TOP_CENTER, "%.0f°", id(oven1_temperature).state);
# it.printf(50, 120, id(helvetica_48), id(my_yellow), TextAlign::TOP_CENTER, "%.0f°", id(oven2_temperature).state);


